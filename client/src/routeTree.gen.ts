/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthHomeImport } from './routes/_auth/home'
import { Route as AuthFeedsFeedIdIndexImport } from './routes/_auth/feeds/$feedId/index'
import { Route as AuthFeedsFeedIdEditImport } from './routes/_auth/feeds/$feedId/edit'

// Create Virtual Routes

const AuthHomeIndexLazyImport = createFileRoute('/_auth/home/')()
const AuthFeedsFeedIdLazyImport = createFileRoute('/_auth/feeds/$feedId')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthHomeRoute = AuthHomeImport.update({
  path: '/home',
  getParentRoute: () => AuthRoute,
} as any)

const AuthHomeIndexLazyRoute = AuthHomeIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AuthHomeRoute,
} as any).lazy(() =>
  import('./routes/_auth/home/index.lazy').then((d) => d.Route),
)

const AuthFeedsFeedIdLazyRoute = AuthFeedsFeedIdLazyImport.update({
  path: '/feeds/$feedId',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/feeds/$feedId.lazy').then((d) => d.Route),
)

const AuthFeedsFeedIdIndexRoute = AuthFeedsFeedIdIndexImport.update({
  path: '/',
  getParentRoute: () => AuthFeedsFeedIdLazyRoute,
} as any)

const AuthFeedsFeedIdEditRoute = AuthFeedsFeedIdEditImport.update({
  path: '/edit',
  getParentRoute: () => AuthFeedsFeedIdLazyRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_auth/home': {
      preLoaderRoute: typeof AuthHomeImport
      parentRoute: typeof AuthImport
    }
    '/_auth/feeds/$feedId': {
      preLoaderRoute: typeof AuthFeedsFeedIdLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/home/': {
      preLoaderRoute: typeof AuthHomeIndexLazyImport
      parentRoute: typeof AuthHomeImport
    }
    '/_auth/feeds/$feedId/edit': {
      preLoaderRoute: typeof AuthFeedsFeedIdEditImport
      parentRoute: typeof AuthFeedsFeedIdLazyImport
    }
    '/_auth/feeds/$feedId/': {
      preLoaderRoute: typeof AuthFeedsFeedIdIndexImport
      parentRoute: typeof AuthFeedsFeedIdLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthRoute.addChildren([
    AuthHomeRoute.addChildren([AuthHomeIndexLazyRoute]),
    AuthFeedsFeedIdLazyRoute.addChildren([
      AuthFeedsFeedIdEditRoute,
      AuthFeedsFeedIdIndexRoute,
    ]),
  ]),
])

/* prettier-ignore-end */
